import telebot
import random

from telebot import types

bot = telebot.TeleBot("5099555428:AAExGdnW8mnRAAFD-wBzt4KmDSViD8jsIMs")

data_consts = dict()
data_ids = set()


@bot.message_handler(commands=['start'])
def starting(message):
    img = open('static/club.jpeg', 'rb')
    bot.send_photo(message.chat.id, img)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ")
    item2 = types.KeyboardButton("–ó–∞–¥–∞—Ç—å –¥–∏–∞–ø–æ–∑–æ–Ω")

    markup.add(item1, item2)

    bot.send_message(message.chat.id,
                     f"–ö—É, {message.from_user.first_name}!\n–≠—Ç–æ –±–æ—Ç –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –¥–ª—è —Ä–∞–Ω–¥–æ–º–∞ —á–∏—Å–µ–ª –≤ –¥–∏–∞–ø–æ–∑–æ–Ω–µ.",
                     parse_mode='html', reply_markup=markup)


def fill_markup_random(markup):
    item1 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É", callback_data='left')
    item2 = types.InlineKeyboardButton("–ó–∞–¥–∞—Ç—å –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É", callback_data='right')
    item3 = types.InlineKeyboardButton("–ó–∞—Ä–∞–Ω–¥–æ–º–∏—Ç—å", callback_data='lets_go')

    markup.add(item1, item2, item3)


def is_number(text):
    if text.isnumeric():
        return True

    if len(text) > 1 and text[0] == '-' and text[1:].isnumeric():
        return True

    return False


def print_random(chat_id):
    data_consts[chat_id][2] = "none"
    if data_consts[chat_id][0] > data_consts[chat_id][1]:
        img = open('static/pasha.jpeg', 'rb')
        bot.send_photo(chat_id, img)
        bot.send_message(chat_id, "–¢—ã –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è —á—Ç–æ-—Ç–æ –ø–µ—Ä–µ–ø—É—Ç–∞–ª...")
    else:
        answer = random.randint(data_consts[chat_id][0], data_consts[chat_id][1])
        bot.send_message(chat_id, f"–†–∞–Ω–¥–æ–º–∏–º –∏–∑ –¥–∏–∞–ø–æ–∑–æ–Ω–∞: ({data_consts[chat_id][0]};"
                                  f"{data_consts[chat_id][1]})\n–î–µ–ª–æ —Å–¥–µ–ª–∞–Ω–æ: {answer}!")


@bot.message_handler(content_types=['text'])
def simple_text(message):
    if message.chat.id not in data_ids:
        data_consts[message.chat.id] = [0, 100, "none"]
        data_ids.add(message.chat.id)

    if message.text == 'üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
        print_random(message.chat.id)
    elif message.text == '–ó–∞–¥–∞—Ç—å –¥–∏–∞–ø–æ–∑–æ–Ω':
        markup = types.InlineKeyboardMarkup(row_width=3)
        fill_markup_random(markup)

        bot.send_message(message.chat.id, f"–æ–æ–æ–æ–æ–æ–∫–µ–π –ª–µ—Ç—Å –≥–æ—É\n–¢–µ–∫—É—â–∏–µ –≥—Ä–∞–Ω–∏—Ü—ã: ({data_consts[message.chat.id][0]};"
                                          f"{data_consts[message.chat.id][1]})",
                         reply_markup=markup)
    elif is_number(message.text):
        if data_consts[message.chat.id][2] == "none":
            bot.send_message(message.chat.id, '–ò –∑–∞—á–µ–º –º–Ω–µ —ç—Ç–æ —á–∏—Å–ª–æ?')
        else:

            if data_consts[message.chat.id][2] == 'left':
                data_consts[message.chat.id][0] = int(message.text)
            elif data_consts[message.chat.id][2] == 'right':
                data_consts[message.chat.id][1] = int(message.text)
            data_consts[message.chat.id][2] = "none"

            markup = types.InlineKeyboardMarkup(row_width=3)
            fill_markup_random(markup)

            bot.send_message(message.chat.id,
                             f"–¢–µ–∫—É—â–∏–µ –≥—Ä–∞–Ω–∏—Ü—ã: ({data_consts[message.chat.id][0]};"
                             f"{data_consts[message.chat.id][1]})",
                             reply_markup=markup)
    else:
        if data_consts[message.chat.id][2] != "none":
            bot.send_message(message.chat.id, '–¢—ã —á—Ç–æ —á–∏—Å–ª–æ –Ω–∞–ø–∏—Å–∞—Ç—å –Ω–µ –º–æ–∂–µ—à—å?')
        elif message.text == 'hello':
            stik = open('static/hello.webp', 'rb')
            bot.send_sticker(message.chat.id, stik)
        else:
            bot.send_message(message.chat.id, '–ë–æ–ª—å—à–µ —è –ø–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –º–æ–≥—É, –Ω–µ –ø–∏—à–∏ —Å—é–¥–∞.')


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    try:
        if call.message:
            if call.data == 'left':
                data_consts[call.message.chat.id][2] = "left"
                bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É')
            elif call.data == 'right':
                data_consts[call.message.chat.id][2] = "right"
                bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏ –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É')
            else:
                print_random(call.message.chat.id)
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id,
                                  text="üé≤ –†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ –∏–∑ –¥–∏–∞–ø–æ–∑–æ–Ω–∞",
                                  reply_markup=None)

    except Exception as e:
        print(repr(e))


bot.polling(none_stop=True)
